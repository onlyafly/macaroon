{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "information_for_contributors": [
        "This file has been converted from https://github.com/atom/language-clojure/blob/master/grammars/clojure.cson",
        "If you want to provide a fix or improvement, please create a pull request against the original repository.",
        "Once accepted there, we are happy to receive an update request."
    ],
    "version": "1.0.0",
    "name": "Macaroon",
    "scopeName": "source.macaroon",
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#shebang-comment"
        },
        {
            "include": "#quoted-sexp"
        },
        {
            "include": "#sexp"
        },
        {
            "include": "#keyfn"
        },
        {
            "include": "#string"
        },
        {
            "include": "#vector"
        },
        {
            "include": "#set"
        },
        {
            "include": "#map"
        },
        {
            "include": "#regexp"
        },
        {
            "include": "#var"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#dynamic-variables"
        },
        {
            "include": "#metadata"
        },
        {
            "include": "#namespace-symbol"
        },
        {
            "include": "#symbol"
        }
    ],
    "repository": {
        "comment": {
            "patterns": [
                {
                    "name": "comment.block.macaroon",
                    "begin": "#\\|",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.macaroon"
                        }
                    },
                    "end": "\\|#",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.macaroon"
                        }
                    }
                },
                {
                    "begin": "(?<!\\\\);",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.macaroon"
                        }
                    },
                    "end": "$",
                    "name": "comment.line.semicolon.macaroon"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "match": "(nil)(?=(\\s|\\)|\\]|\\}))",
                    "name": "constant.language.nil.macaroon"
                },
                {
                    "match": "(true|false)",
                    "name": "constant.language.boolean.macaroon"
                },
                {
                    "match": "(-?\\d+/\\d+)",
                    "name": "constant.numeric.ratio.macaroon"
                },
                {
                    "match": "(-?\\d+[rR][0-9a-zA-Z]+)",
                    "name": "constant.numeric.arbitrary-radix.macaroon"
                },
                {
                    "match": "(-?0[xX][0-9a-fA-F]+)",
                    "name": "constant.numeric.hexadecimal.macaroon"
                },
                {
                    "match": "(-?0\\d+)",
                    "name": "constant.numeric.octal.macaroon"
                },
                {
                    "match": "(-?\\d+\\.\\d+([eE][+-]?\\d+)?M)",
                    "name": "constant.numeric.bigdecimal.macaroon"
                },
                {
                    "match": "(-?\\d+\\.\\d+([eE][+-]?\\d+)?)",
                    "name": "constant.numeric.double.macaroon"
                },
                {
                    "match": "(-?\\d+N)",
                    "name": "constant.numeric.bigint.macaroon"
                },
                {
                    "match": "(-?\\d+)",
                    "name": "constant.numeric.long.macaroon"
                },
                {
                    "include": "#keyword"
                }
            ]
        },
        "keyword": {
            "match": "(?<=(\\s|\\(|\\[|\\{)):[a-zA-Z0-9\\#\\.\\-\\_\\:\\+\\=\\>\\<\\/\\!\\?\\*]+(?=(\\s|\\)|\\]|\\}|\\,))",
            "name": "constant.keyword.macaroon"
        },
        "keyfn": {
            "patterns": [
                {
                    "match": "(?<=(\\s|\\(|\\[|\\{))(if(-[-a-z\\?]*)?|when(-[-a-z]*)?|for(-[-a-z]*)?|cond|do|let(-[-a-z\\?]*)?|binding|loop|recur|fn|throw[a-z\\-]*|try|catch|finally|([a-z]*case))(?=(\\s|\\)|\\]|\\}))",
                    "name": "storage.control.macaroon"
                },
                {
                    "match": "(?<=(\\s|\\(|\\[|\\{))(declare-?|(in-)?ns|import|use|require|load|compile|(def[a-z\\-]*))(?=(\\s|\\)|\\]|\\}))",
                    "name": "keyword.control.macaroon"
                }
            ]
        },
        "dynamic-variables": {
            "match": "\\*[\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\d]+\\*",
            "name": "meta.symbol.dynamic.macaroon"
        },
        "map": {
            "begin": "(\\{)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.section.map.begin.macaroon"
                }
            },
            "end": "(\\}(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\})",
            "endCaptures": {
                "1": {
                    "name": "punctuation.section.map.end.trailing.macaroon"
                },
                "2": {
                    "name": "punctuation.section.map.end.macaroon"
                }
            },
            "name": "meta.map.macaroon",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "metadata": {
            "patterns": [
                {
                    "begin": "(\\^\\{)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.section.metadata.map.begin.macaroon"
                        }
                    },
                    "end": "(\\}(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\})",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.section.metadata.map.end.trailing.macaroon"
                        },
                        "2": {
                            "name": "punctuation.section.metadata.map.end.macaroon"
                        }
                    },
                    "name": "meta.metadata.map.macaroon",
                    "patterns": [
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "(\\^)",
                    "end": "(\\s)",
                    "name": "meta.metadata.simple.macaroon",
                    "patterns": [
                        {
                            "include": "#keyword"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "quoted-sexp": {
            "begin": "(['``]\\()",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.section.expression.begin.macaroon"
                }
            },
            "end": "(\\))$|(\\)(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\))",
            "endCaptures": {
                "1": {
                    "name": "punctuation.section.expression.end.trailing.macaroon"
                },
                "2": {
                    "name": "punctuation.section.expression.end.trailing.macaroon"
                },
                "3": {
                    "name": "punctuation.section.expression.end.macaroon"
                }
            },
            "name": "meta.quoted-expression.macaroon",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "regexp": {
            "begin": "#\"",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.regexp.begin.macaroon"
                }
            },
            "end": "\"",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.regexp.end.macaroon"
                }
            },
            "name": "string.regexp.macaroon",
            "patterns": [
                {
                    "include": "#regexp_escaped_char"
                }
            ]
        },
        "regexp_escaped_char": {
            "match": "\\\\.",
            "name": "constant.character.escape.macaroon"
        },
        "set": {
            "begin": "(\\#\\{)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.section.set.begin.macaroon"
                }
            },
            "end": "(\\}(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\})",
            "endCaptures": {
                "1": {
                    "name": "punctuation.section.set.end.trailing.macaroon"
                },
                "2": {
                    "name": "punctuation.section.set.end.macaroon"
                }
            },
            "name": "meta.set.macaroon",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "sexp": {
            "begin": "(\\()",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.section.expression.begin.macaroon"
                }
            },
            "end": "(\\))$|(\\)(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\))",
            "endCaptures": {
                "1": {
                    "name": "punctuation.section.expression.end.trailing.macaroon"
                },
                "2": {
                    "name": "punctuation.section.expression.end.trailing.macaroon"
                },
                "3": {
                    "name": "punctuation.section.expression.end.macaroon"
                }
            },
            "name": "meta.expression.macaroon",
            "patterns": [
                {
                    "begin": "(?<=\\()(ns|declare|def[\\w\\d._:+=><!?*-]*|[\\w._:+=><!?*-][\\w\\d._:+=><!?*-]*/def[\\w\\d._:+=><!?*-]*)\\s+",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.macaroon"
                        }
                    },
                    "end": "(?=\\))",
                    "name": "meta.definition.global.macaroon",
                    "patterns": [
                        {
                            "include": "#metadata"
                        },
                        {
                            "include": "#dynamic-variables"
                        },
                        {
                            "match": "([a-zA-Z\\.\\-\\_\\+\\=\\>\\<\\!\\?\\*][\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\*\\d]*)",
                            "name": "entity.global.macaroon"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "include": "#keyfn"
                },
                {
                    "include": "#constants"
                },
                {
                    "include": "#vector"
                },
                {
                    "include": "#map"
                },
                {
                    "include": "#set"
                },
                {
                    "include": "#sexp"
                },
                {
                    "match": "(?<=\\()(.+?)(?=\\s|\\))",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.macaroon"
                        }
                    },
                    "patterns": [
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "include": "$self"
                }
            ]
        },
        "shebang-comment": {
            "begin": "^(#!)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.comment.shebang.macaroon"
                }
            },
            "end": "$",
            "name": "comment.line.shebang.macaroon"
        },
        "string": {
            "begin": "(?<!\\\\)(\")",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.string.begin.macaroon"
                }
            },
            "end": "(\")",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.string.end.macaroon"
                }
            },
            "name": "string.quoted.double.macaroon",
            "patterns": [
                {
                    "match": "\\\\.",
                    "name": "constant.character.escape.macaroon"
                }
            ]
        },
        "namespace-symbol": {
            "patterns": [
                {
                    "match": "([a-zA-Z\\.\\-\\_\\+\\=\\>\\<\\!\\?\\*][\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\*\\d]*)/",
                    "captures": {
                        "1": {
                            "name": "meta.symbol.namespace.macaroon"
                        }
                    }
                }
            ]
        },
        "symbol": {
            "patterns": [
                {
                    "match": "([a-zA-Z\\.\\-\\_\\+\\=\\>\\<\\!\\?\\*][\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\*\\d]*)",
                    "name": "meta.symbol.macaroon"
                }
            ]
        },
        "var": {
            "match": "(?<=(\\s|\\(|\\[|\\{)\\#)'[a-zA-Z0-9\\.\\-\\_\\:\\+\\=\\>\\<\\/\\!\\?\\*]+(?=(\\s|\\)|\\]|\\}))",
            "name": "meta.var.macaroon"
        },
        "vector": {
            "begin": "(\\[)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.section.vector.begin.macaroon"
                }
            },
            "end": "(\\](?=[\\}\\]\\)\\s]*(?:;|$)))|(\\])",
            "endCaptures": {
                "1": {
                    "name": "punctuation.section.vector.end.trailing.macaroon"
                },
                "2": {
                    "name": "punctuation.section.vector.end.macaroon"
                }
            },
            "name": "meta.vector.macaroon",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        }
    }
}